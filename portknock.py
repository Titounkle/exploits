#! /usr/bin/python
# -*- coding: utf-8 -*-
from socket import *
import os
import re
import time

print("""
  ____            _   _  __                 _    _
 |  _ \ ___  _ __| |_| |/ /_ __   ___   ___| | _(_)_ __   __ _
 | |_) / _ \| '__| __| ' /| '_ \ / _ \ / __| |/ / | '_ \ / _` |
 |  __/ (_) | |  | |_| . \| | | | (_) | (__|   <| | | | | (_| |
 |_|   \___/|_|   \__|_|\_\_| |_|\___/ \___|_|\_\_|_| |_|\__, |
                                                         |___/
                                                Pax0rs Team - X
""")

combinaciones = []
host = input("Indica IP objetivo: ")
puerto = int(input("Indica puerto objetivo: "))


def GetPorts():
    s = socket()
    s.connect((host, puerto))
    data = s.recv(20)
    s.close()
    # print(data)
    data = data.decode('ISO-8859-1')
    lista = re.findall(r'\d+', data)
    print("[!] Puertos objetivo: %s" % lista)
    for num1 in lista:
        for num2 in lista:
            if num1 != num2:
                for num3 in lista:
                    if num3 != num2 and num3 != num1:
                        combinaciones.append(num1)
                        combinaciones.append(num2)
                        combinaciones.append(num3)


host = host


def KnockPorts():
    i = 0
    while len(combinaciones) > i:
        port = combinaciones[i]
        print("[*] Knock Knock: " + host + ":" + port)
        s = socket(AF_INET, SOCK_STREAM)
        socket_address = (host, int(port))
        s.connect_ex(socket_address)
        s.close()
        # time.sleep(1)
        i += 1
    print("[^] Acceso conseguido, comprobando puertos abiertos...")
    os.system("nmap --top-ports 10 "+host)


def main():
    GetPorts()
    KnockPorts()


if __name__ == "__main__":
    main()
